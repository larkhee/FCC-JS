//Sum All Odd Fibonacci Numbers

//Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

//The first two numbers in the Fibonacci sequence are 0 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first seven numbers of the Fibonacci sequence are 0, 1, 1, 2, 3, 5 and 8.

//For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.

function sumFibs(num) {
  var init = [0, 1]; // Initialize array!
  let fib = [];
  
  for (let i = 2; i <= num; i++) {
    // Next fibonacci number = previous + one before previous
    // Translated to JavaScript:
    init[i] = init[i - 2] + init[i - 1];
    fib.push(init[i]);
  };
  
  //add back two numbers of the fibonnacci sequence to the front of the array
  fib.unshift(0);
  fib.unshift(1);
  //filter so that only odd numbers less than num are selected and added together
  return fib
    .filter(n => n%2)
    .filter(n => n<=num)
    .reduce((r,c) => r+c);
    
}

sumFibs(4);

